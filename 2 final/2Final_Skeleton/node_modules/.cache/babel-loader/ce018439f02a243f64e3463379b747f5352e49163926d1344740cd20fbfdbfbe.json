{"ast":null,"code":"export default {\n  name: 'TurismoView',\n  data() {\n    return {\n      arrayTurismo: [],\n      selectedType: \"\"\n    };\n  },\n  created() {\n    axios.get('/json/turismo.json').then(response => {\n      this.turismo = response.data;\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  computed: {},\n  methods: {}\n};","map":{"version":3,"mappings":"AAwBA,eAAe;EACXA,IAAI,EAAE,aAAa;EACnBC,IAAI,GAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAO,GAAG;IACNC,KAAK,CAACC,GAAG,CAAC,oBAAoB,EACzBC,IAAI,CAACC,QAAO,IAAK;MACd,IAAI,CAACC,OAAM,GAAID,QAAQ,CAACP,IAAI;IAChC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACV,CAAC;EACDE,QAAQ,EAAE,CAEV,CAAC;EACDC,OAAO,EAAE,CAET;AACJ,CAAC","names":["name","data","arrayTurismo","selectedType","created","axios","get","then","response","turismo","catch","error","console","computed","methods"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\EJERCICIOSVUE\\2 final\\2Final_Skeleton\\src\\views\\TurismoView.vue"],"sourcesContent":["<template>\r\n\r\n    <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Ability</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(turismo, index) in arrayTurismo\" :key=\"turismo.name\">\r\n            <td>{{ pokemon.name }}</td>\r\n            <td>{{ pokemon.type }}</td>\r\n            <td>{{ pokemon.ability }}</td>\r\n            <td>\r\n              <!-- <button @click=\"deletePokemon(index)\">Delete</button> -->\r\n            </td>x \r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'TurismoView',\r\n    data() {\r\n        return {\r\n            arrayTurismo: [],\r\n            selectedType: \"\",\r\n        }\r\n    },\r\n    created() {\r\n        axios.get('/json/turismo.json')\r\n            .then(response => {\r\n                this.turismo = response.data;\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    },\r\n    computed: {\r\n       \r\n    },\r\n    methods: {\r\n     \r\n    },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}